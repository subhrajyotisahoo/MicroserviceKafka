name: Deploy Spring Boot Kafka Microservices

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      ##################################
      # Deploy to EC2 Instance 1
      ##################################

      - name: Clean project folder on EC2 1
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP_1 }} << 'EOF'
            set -e
            rm -rf ~/MicroserviceKafka
            mkdir ~/MicroserviceKafka
          EOF

      - name: Copy files to EC2 1
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r . ubuntu@${{ secrets.EC2_IP_1 }}:~/MicroserviceKafka/

      - name: Build and deploy on EC2 1
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP_1 }} << 'EOF'
            set -e
            cd ~/MicroserviceKafka

            sudo apt-get update -y
            sudo apt-get install -y openjdk-21-jdk maven docker-compose

            export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
            export PATH=$JAVA_HOME/bin:$PATH

            cd email-service && mvn clean package -DskipTests && cd ..
            cd order-service && mvn clean package -DskipTests && cd ..
            cd stock-service && mvn clean package -DskipTests && cd ..

            # ✅ Start Kafka, Zookeeper, Redis only if not already running
            if [ -z "$(docker ps -q -f name=zookeeper)" ]; then
              echo "Starting Kafka, Zookeeper, and Redis..."
              docker-compose up -d redis kafka zookeeper
            else
              echo "Kafka, Zookeeper, Redis already running. Skipping."
            fi

            # 🔁 Rebuild and restart only app services
            docker-compose build stock-service email-service order-service
            docker-compose up -d stock-service email-service order-service
          EOF

      ##################################
      # Deploy to EC2 Instance 2
      ##################################

      - name: Clean project folder on EC2 2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP_2 }} << 'EOF'
            set -e
            rm -rf ~/MicroserviceKafka
            mkdir ~/MicroserviceKafka
          EOF

      - name: Copy files to EC2 2
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r . ubuntu@${{ secrets.EC2_IP_2 }}:~/MicroserviceKafka/

      - name: Build and deploy on EC2 2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.EC2_IP_2 }} << 'EOF'
            set -e
            cd ~/MicroserviceKafka

            sudo apt-get update -y
            sudo apt-get install -y openjdk-21-jdk maven docker-compose

            export JAVA_HOME=/usr/lib/jvm/java-21-openjdk-amd64
            export PATH=$JAVA_HOME/bin:$PATH

            cd email-service && mvn clean package -DskipTests && cd ..
            cd order-service && mvn clean package -DskipTests && cd ..
            cd stock-service && mvn clean package -DskipTests && cd ..

            # ✅ Start Kafka, Zookeeper, Redis only if not already running
            if [ -z "$(docker ps -q -f name=zookeeper)" ]; then
              echo "Starting Kafka, Zookeeper, and Redis..."
              docker-compose up -d redis kafka zookeeper
            else
              echo "Kafka, Zookeeper, Redis already running. Skipping."
            fi

            # 🔁 Rebuild and restart only app services
            docker-compose build stock-service email-service order-service
            docker-compose up -d stock-service email-service order-service
          EOF
